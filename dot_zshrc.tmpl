# Set the file where history is saved
HISTFILE=~/.zsh_history

# Number of lines kept in memory during the session
HISTSIZE=10000

# Number of lines stored in the history file
SAVEHIST=10000
unsetopt autocd
# End of lines configured by zsh-newuser-install
#
# Options to make history behave better
setopt SHARE_HISTORY       # Share history between sessions
setopt HIST_FIND_NO_DUPS   # Don't show duplicates in history search results
setopt HIST_REDUCE_BLANKS  # Remove extra blanks from commands

# Allow # to be used in zsh
setopt interactivecomments
{{- if eq .chezmoi.os "linux" }}
{{- if eq .chezmoi.osRelease.id "arch" }}
export PATH=/opt/cuda/bin:$HOME/Android/Sdk/platform-tools:$HOME/.local/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/opt/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export CUDA_HOME=/opt/cuda
{{- else if eq .chezmoi.osRelease.id "fedora" }}
export PATH=$HOME/Android/Sdk/platform-tools:$PATH
export CUDA_HOME=/usr/local/cuda-12.8
export TENSORRT_HOME=$HOME/TensorRT-10.9.0.34
export PATH=${CUDA_HOME}/bin:${TENSORRT_HOME}/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=${CUDA_HOME}/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export LD_LIBRARY_PATH=${TENSORRT_HOME}/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

source $HOME/work-aliases.sh
{{- end }}
{{- end }}
export EDITOR=nvim

alias vim="nvim"
alias ls="eza --icons=always"
alias tree="eza --tree --icons=always"

# Fix Home/End/Delete
bindkey  "^[[H"   beginning-of-line
bindkey  "^[[F"   end-of-line
bindkey  "^[[3~"  delete-char

# Set up fzf key bindings and fuzzy completion
export FZF_CTRL_R_OPTS='--layout=reverse'
source <(fzf --zsh)

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --icons=always --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'eza --tree --icons=always --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}

# Set up starship
eval "$(starship init zsh)"

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'micromamba shell init' !!
export MAMBA_EXE='/home/tswr/.local/bin/micromamba';
export MAMBA_ROOT_PREFIX='/home/tswr/micromamba';
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    alias micromamba="$MAMBA_EXE"  # Fallback on help from micromamba activate
fi
unset __mamba_setup
# <<< mamba initialize <<<

# zsh-autosuggestions
export ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd history completion)
{{- if eq .chezmoi.os "linux" }}
{{- if eq .chezmoi.osRelease.id "arch" }}
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
{{- else if eq .chezmoi.osRelease.id "fedora" }}
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{{- end}}
{{- else if eq .chezmoi.os "darwin"}}
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{{- end}}

# zoxide
eval "$(zoxide init zsh)"
alias cd=z

# zsh-syntax-highlighting.zsh
# should be sourced at the end of the .zshrc
{{- if eq .chezmoi.os "linux" }}
{{- if eq .chezmoi.osRelease.id "arch" }}
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{{- else if eq .chezmoi.osRelease.id "fedora" }}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{{- end}}
{{- else if eq .chezmoi.os "darwin"}}
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{{- end}}

# The following lines were added by compinstall
zstyle :compinstall filename '/home/tswr/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
